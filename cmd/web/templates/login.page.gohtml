{{template "base" .}}

{{define "title"}}
    Login
{{end}}

{{define "content"}}
<div class="row">
    <div class="col-md-6 offset-md-3">

        <div class="alert alert-danger text-center d-none" id="login-messages"></div>
        
        <form action="" method="post" action="/login"
            name="login_form" id="login_form"
            class="d-block needs-validation charge-form"
            autocomplete="off" novalidate="">
            
            <h2 class="mt-2 text-center mb-3">系統登入</h2>
            <hr>

            <div class="mb-3">
                <label for="user" class="form-label">使用者</label>
                <input type="user" class="form-control" id="user" name="user"
                    required="" autocomplete="user-new">
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">密碼</label>
                <input type="password" class="form-control" id="password" name="password"
                    required="" autocomplete="password-new">
            </div>

            <hr>

            <a href="javascript:void(0)" class="btn btn-primary" onclick="val()">登入</a>

            <p class="mt-2">
            <small><a href="/forgot-password">忘記密碼?</a>
            </p>

        </form>
    </div>
</div>
{{end}}


{{define "js"}}
<script>
    let loginMessages = document.getElementById("login-messages");

    function showError(msg) {
        loginMessages.classList.add("alert-danger");
        loginMessages.classList.remove("alert-success");
        loginMessages.classList.remove("d-none");
        loginMessages.innerText = msg;
    }

    function showSuccess() {
        loginMessages.classList.remove("alert-danger");
        loginMessages.classList.add("alert-success");
        loginMessages.classList.remove("d-none");
        loginMessages.innerText = "登入成功";
    }

    async function val() {
        let form = document.getElementById("login_form");
        if (form.checkValidity() === false) {
            this.event.preventDefault();
            this.event.stopPropagation();
            {{/* form.classList.add("was-validated"); */}}
            return;
        }
        form.classList.add("was-validated");

        let payload = {
            user: document.getElementById("user").value,
            password: document.getElementById("password").value,
        }

        const requestOptions = {
            method: 'post',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(payload),
        }

        fetch("{{.Backend}}/api/authenticate", requestOptions)
        .then(response => response.json())
        .then(data => {
            //console.log(data);
            if (data.status === true) {
                localStorage.setItem('token', data.authentication_token.token);
                localStorage.setItem('token_expiry', data.authentication_token.expiry);
                showSuccess();
                //location.href = "/";
                document.getElementById("login_form").submit();
            } else {
                showError(data.data);
            }
        }).catch((err) => {
            notify(err, "error");
        })
    }
    </script>
{{end}}