{{define "base"}}

<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
    <link rel="stylesheet" href="/static/admin/css/style.css">

    <style>

        .card {
            height: 100%;
            width: 200%;
            min-height: 300px;
            display: flex;
            flex-direction: column;
            padding: 20px;
        }

        .form-control {
            width: 100%; 
            box-sizing: border-box; 
        }

    </style>

    <title>
      {{block "title" .}}
      {{end}}
    </title>

    {{block "head" .}}
    {{end}}

    {{block "css" . }}
    {{end}}
    

  </head>
  <body>

  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">&nbsp;</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">

          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/">首頁</a>
          </li>

          {{/* <li class="nav-item setting">
            <a class="nav-link" href="#" id="settingPage" role="button" aria-expanded="false">
              設定
            </a>
          </li> */}}

          {{if eq .IsAuthenticated 1}}

          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/admin/dashboard">管理員</a>
          </li>

          {{end}}

        </ul>

        {{if eq .IsAuthenticated 1}}
          <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
            <li id="clock-link" class="nav-item">
              <div class="nav-link" id="clock"></div></li>
            </li>
            <li id="login-link" class="nav-item">
              <a class="nav-link" href="/logout">登出</a></li>
            </li>
          </ul>
        {{else}}
          <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
            <li id="clock-link" class="nav-item">
               <div class="nav-link" id="clock"></div></li>
            </li>
            <li id="login-link" class="nav-item">
              <a class="nav-link" href="/login">登入</a></li>
            </li>
          </ul>
        {{end}}
      </div>
    </div>
  </nav>

  {{block "content" .}} 
  {{end}}

  {{block "grpc" .}} 
  {{end}}

  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
  <script type="text/javascript" src="/static/js/bootstrap.bundle-4.5.2.min.js"></script>
  <script src="https://unpkg.com/notie"></script>
  <script src="/static/js/main.js"></script>
  <script>
  
    let socket;
    document.addEventListener("DOMContentLoaded", function() {
      socket = new WebSocket("ws://{{.Host}}/ws/endPoint");
      socket.onopen = () => {}
      socket.onclose = event => { };
      socket.onerror = error => { };
      socket.onmessage = msg => { 
        let data = JSON.parse(msg.data);
        switch (data.action) {
          case "deleteUser":
            if (data.user_id === {{.UserID}}) {
              logout();
            }
            break;
          case "logout":
            logout();
            break;
          default:
        }
      }
    })

    // create grpc client
    let token = localStorage.getItem("token");
    NewClient("{{.ProxyAddr}}", token);
    ShowClock();

    function checkAuth() {
      if (localStorage.getItem("token") === null) {
        location.href = "/login";
        return;
      } else {

        const requestOptions = {
          method: "POST",
          headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json',
          }
        }

        fetch("{{.Backend}}/api/is-authenticated", requestOptions)
        .then(response => response.json())
        .then(function(data){
          if (data.error === true) {
            console.log("not logged in");
            location.href = "/login";
          } else {
            console.log("Logged in");
          }
        }).catch((err) => {
            notify(err, "error");
        })
      }
    }

    function notify(msg, msgType) {
        notie.alert({
            type: msgType,
            text: msg,
        })
    }

    function notifyModal(title, text, icon, confirmationButtonText) {
        Swal.fire({
            title: title,
            html: text,
            icon: icon,
            confirmButtonText: confirmationButtonText
        })
    }

    {{with .Error}}
      notify("{{.}}", "error");
    {{end}}

    {{with .Flash}}
      notify("{{.}}", "success");
    {{end}}

    {{with .Warning}}
      notify("{{.}}", "warning");
    {{end}}

  </script>

  {{block "js" .}}
  {{end}}

  </body>
    
</html>

{{end}}
